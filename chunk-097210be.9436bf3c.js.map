{"version":3,"sources":["webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./src/pages/SaveLoad.vue?28f2","webpack:///src/pages/SaveLoad.vue","webpack:///./src/pages/SaveLoad.vue?4c96","webpack:///./src/pages/SaveLoad.vue","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/jsonic/jsonic.js"],"names":["toObject","floor","Math","replace","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","matched","str","position","captures","namedCaptures","replacement","tailPos","length","m","symbols","undefined","call","match","ch","capture","charAt","slice","n","f","render","_vm","this","_h","$createElement","_c","_self","on","onSubmit","attrs","model","value","callback","$$v","code","expression","directives","name","rawName","modifiers","staticClass","$event","copyText","_v","onCtcSubmit","puzzleId","ref","showFailed","ctcEnabled","staticRenderFns","components","data","store","props","created","sudoku","getCode","fetchCtc","methods","event","preventDefault","selectedCells","fetch","el","text","setAttribute","style","left","document","body","appendChild","select","execCommand","removeChild","selected","getSelection","removeAllRanges","addRange","component","fixRegExpWellKnownSymbolLogic","anObject","toLength","toInteger","requireObjectCoercible","advanceStringIndex","getSubstitution","regExpExec","max","min","maybeToString","it","String","REPLACE","nativeReplace","maybeCallNative","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","regexp","indexOf","res","done","rx","S","functionalReplace","global","fullUnicode","unicode","lastIndex","results","result","push","matchStr","accumulatedResult","nextSourcePosition","i","index","j","groups","replacerArgs","concat","apply","root","previous_jsonic","jsonic","src","Object","prototype","toString","trim","jsonic_parser","parse","noConflict","peg$subclass","child","parent","ctor","constructor","SyntaxError","message","expected","found","offset","line","column","input","peg$result","options","arguments","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","peg$c1","object","peg$c2","array","peg$c3","peg$c4","type","description","peg$c5","peg$c6","peg$c7","peg$c8","members","peg$c9","peg$c10","peg$c11","peg$c13","head","tail","fixNull","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","elements","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","null_","peg$c33","lit","join","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","chars","peg$c39","peg$c40","peg$c41","peg$c42","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c56","peg$c57","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","peg$c70","peg$c71","h1","h2","h3","h4","fromCharCode","parseInt","peg$c72","peg$c73","peg$c74","peg$c75","peg$c76","peg$c77","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","int_","frac","exp","suffix","parseFloat","peg$c85","peg$c86","peg$c87","peg$c88","digit19","digits","peg$c89","peg$c90","peg$c91","peg$c92","digit","peg$c93","peg$c94","peg$c95","peg$c96","e","peg$c97","peg$c98","peg$c99","peg$c100","peg$c101","peg$c102","sign","peg$c103","peg$c104","peg$c105","peg$c106","peg$c107","peg$c108","peg$c109","peg$c110","peg$c111","peg$currPos","peg$cachedPos","peg$cachedPosDetails","seenCR","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","Error","peg$computePosDetails","pos","advance","details","startPos","endPos","p","peg$fail","peg$buildException","cleanupExpected","sort","a","b","splice","buildMessage","stringEscape","s","hex","charCodeAt","toUpperCase","expectedDesc","foundDesc","expectedDescs","Array","posDetails","s0","s1","s2","peg$parse_","peg$parseobject","peg$parsearray","s3","s4","s5","peg$parsemembers","s6","s7","peg$parsepair","peg$parsekey","peg$parsevalue","peg$parseelements","peg$parsestring","peg$parsesingle","substr","peg$parsenumber","peg$parseliteral","peg$parsechars","peg$parseschars","peg$parsechar","test","peg$parsehexDigit","peg$parseschar","peg$parselitchar","peg$parseint","peg$parsefrac","peg$parseexp","peg$parsedigit19","peg$parsedigits","peg$parsedigit","peg$parsee","peg$parsewhitespace","stringify","val","opts","depth","showfunc","custom","hasOwnProperty","inspect","out","k","isNaN","maxitems","pass","exclude","omit","JSON","valstr","callopts","c","d","mi","maxchars","mc","x","o","substring"],"mappings":"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","file":"js/chunk-097210be.9436bf3c.js","sourcesContent":["var toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar replace = ''.replace;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace.call(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (ch.charAt(0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return str.slice(0, position);\n      case \"'\": return str.slice(tailPos);\n      case '<':\n        capture = namedCaptures[ch.slice(1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-form',{on:{\"submit\":_vm.onSubmit}},[_c('b-form-group',{attrs:{\"id\":\"input-group-1\",\"label\":\"Code:\",\"label-for\":\"code\"}},[_c('b-form-textarea',{attrs:{\"id\":\"code\",\"placeholder\":\"Enter a code...\",\"rows\":\"3\",\"max-rows\":\"6\",\"required\":\"\"},model:{value:(_vm.code),callback:function ($$v) {_vm.code=$$v},expression:\"code\"}})],1),_c('b-button',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.click\",value:('Copied!'),expression:\"'Copied!'\",modifiers:{\"click\":true}}],staticClass:\"m-1\",attrs:{\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.copyText(_vm.code)}}},[_vm._v(\"Copy\")]),_c('b-button',{staticClass:\"m-1\",attrs:{\"type\":\"submit\",\"variant\":\"primary\"}},[_vm._v(\"Load\")])],1),_c('b-form',{staticClass:\"mt-4\",on:{\"submit\":_vm.onCtcSubmit}},[_c('b-form-group',{attrs:{\"id\":\"input-group-2\",\"label\":\"CTC Puzzle ID:\",\"label-for\":\"ctc-id\"}},[_c('b-form-input',{attrs:{\"id\":\"ctc-id\",\"placeholder\":\"Enter a puzzle ID...\",\"required\":\"\"},model:{value:(_vm.puzzleId),callback:function ($$v) {_vm.puzzleId=$$v},expression:\"puzzleId\"}})],1),_c('b-popover',{ref:\"popover\",attrs:{\"show\":_vm.showFailed,\"disabled\":\"\",\"target\":\"load-ctc\",\"title\":\"Load failed!\"}}),_c('b-button',{staticClass:\"m-1\",attrs:{\"type\":\"submit\",\"variant\":\"primary\",\"id\":\"load-ctc\",\"disabled\":!_vm.ctcEnabled}},[_vm._v(\"Load\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <b-form @submit=\"onSubmit\">\n      <b-form-group id=\"input-group-1\" label=\"Code:\" label-for=\"code\">\n        <b-form-textarea\n          id=\"code\"\n          v-model=\"code\"\n          placeholder=\"Enter a code...\"\n          rows=\"3\"\n          max-rows=\"6\"\n          required\n        ></b-form-textarea>\n      </b-form-group>\n\n      <b-button\n        class=\"m-1\"\n        variant=\"primary\"\n        @click=\"copyText(code)\"\n        v-b-tooltip.click=\"'Copied!'\"\n        >Copy</b-button\n      >\n      <b-button class=\"m-1\" type=\"submit\" variant=\"primary\">Load</b-button>\n    </b-form>\n    <b-form @submit=\"onCtcSubmit\" class=\"mt-4\">\n      <b-form-group\n        id=\"input-group-2\"\n        label=\"CTC Puzzle ID:\"\n        label-for=\"ctc-id\"\n      >\n        <b-form-input\n          id=\"ctc-id\"\n          v-model=\"puzzleId\"\n          placeholder=\"Enter a puzzle ID...\"\n          required\n        ></b-form-input>\n      </b-form-group>\n\n      <b-popover\n        :show=\"showFailed\"\n        disabled\n        target=\"load-ctc\"\n        title=\"Load failed!\"\n        ref=\"popover\"\n      ></b-popover>\n\n      <b-button\n        class=\"m-1\"\n        type=\"submit\"\n        variant=\"primary\"\n        id=\"load-ctc\"\n        :disabled=\"!ctcEnabled\"\n        >Load</b-button\n      >\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport store from \"../store.js\";\nimport { Sudoku } from \"../sudoku/sudoku.js\";\nimport jsonic from \"jsonic\";\n\nexport default {\n  name: \"SaveLoad\",\n  components: {},\n  data() {\n    return {\n      store,\n      code: \"\",\n      puzzleId: \"\",\n      showFailed: false,\n      ctcEnabled: true,\n    };\n  },\n  props: {},\n  created() {\n    this.code = this.store.sudoku.getCode();\n    this.fetchCtc();\n  },\n  methods: {\n    onSubmit(event) {\n      event.preventDefault();\n      this.store.sudoku = Sudoku.loadCode(this.code);\n      this.store.selectedCells = [];\n    },\n    onCtcSubmit(event) {\n      event.preventDefault();\n      if (!this.ctcEnabled) return;\n      this.ctcEnabled = false;\n      this.store.selectedCells = [];\n      fetch(\n        \"https://api.allorigins.win/get?url=\" +\n          encodeURIComponent(\n            \"https://app.crackingthecryptic.com/api/puzzle/\" + this.puzzleId\n          )\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          let s = data.contents;\n          s = s.replace(/(?<=\\[|,)(?=,|\\])/g, \"null\");\n          let obj = jsonic(s);\n          this.store.sudoku = new Sudoku(obj.ce.flat().map((x) => x?.v));\n          this.showFailed = false;\n          this.ctcEnabled = true;\n        })\n        .catch(() => {\n          this.showFailed = true;\n          this.ctcEnabled = true;\n        });\n    },\n    fetchCtc() {},\n    copyText(text) {\n      const el = document.createElement(\"textarea\");\n      el.value = text;\n      el.setAttribute(\"readonly\", \"\");\n      el.style.position = \"absolute\";\n      el.style.left = \"-9999px\";\n      document.body.appendChild(el);\n      const selected =\n        document.getSelection().rangeCount > 0\n          ? document.getSelection().getRangeAt(0)\n          : false;\n      el.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(el);\n      if (selected) {\n        document.getSelection().removeAllRanges();\n        document.getSelection().addRange(selected);\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SaveLoad.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SaveLoad.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SaveLoad.vue?vue&type=template&id=4223a94e&scoped=true&\"\nimport script from \"./SaveLoad.vue?vue&type=script&lang=js&\"\nexport * from \"./SaveLoad.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4223a94e\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n});\n","/* Copyright (c) 2013-2015 Richard Rodger, MIT License, https://github.com/rjrodger/jsonic */\n\"use strict\";\n\n/* \nTODO: if number fails, assume it's just a string, might be an identifier of some kindTODO: upgrade to pegjs 0.8 \n*/\n\n;(function() {\n  var root           = this || {}\n  var previous_jsonic = root.jsonic\n\n  var has_require = typeof require !== 'undefined'\n\n\n  var jsonic = root.jsonic = function(src) {\n    if( Object.prototype.toString.call(src) !== '[object String]' ) {\n      if( !Object.prototype.toString.call(src).match(/\\[object (Object|Array)\\]/) ) {\n        //throw new Error( \"Not an object, array or string: \"+src )\n        return ''+src;\n      }\n      else return src;\n    }\n\n    src = src.trim();\n\n    if( '{' != src[0] && '[' != src[0] ) { \n      src = '{'+src+'}'; \n    }\n\n    return jsonic_parser.parse( src );\n  }\n\n  jsonic.noConflict = function() {\n    root.jsonic = previous_jsonic;\n    return jsonic;\n  }\n\n\n\n\n\n\nvar jsonic_parser = (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = peg$FAILED,\n        peg$c1 = function(object) { return object; },\n        peg$c2 = function(array) { return array; },\n        peg$c3 = \"{\",\n        peg$c4 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c5 = \"}\",\n        peg$c6 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c7 = function() { return {};      },\n        peg$c8 = function(members) { return members; },\n        peg$c9 = null,\n        peg$c10 = \",\",\n        peg$c11 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c12 = [],\n        peg$c13 = function(head, tail) {\n              var result = {};\n              if( head ) { result[head[0]] = fixNull(head[1]); }\n              for (var i = 0; i < tail.length; i++) {\n                result[tail[i][2][0]] = fixNull(tail[i][2][1]);\n              }\n              return result;\n            },\n        peg$c14 = \":\",\n        peg$c15 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c16 = function(name, value) { return [name, value]; },\n        peg$c17 = \"[\",\n        peg$c18 = { type: \"literal\", value: \"[\", description: \"\\\"[\\\"\" },\n        peg$c19 = \"]\",\n        peg$c20 = { type: \"literal\", value: \"]\", description: \"\\\"]\\\"\" },\n        peg$c21 = function() { return [];       },\n        peg$c22 = function(elements) { return elements; },\n        peg$c23 = function(head, tail) {\n              var result = [];\n              if( typeof head !== 'undefined' && head !== null ) { result.push( fixNull(head) ) }\n              for (var i = 0; i < tail.length; i++) {\n                result.push(fixNull(tail[i][2]));\n              }\n              return result;\n            },\n        peg$c24 = \"true\",\n        peg$c25 = { type: \"literal\", value: \"true\", description: \"\\\"true\\\"\" },\n        peg$c26 = function() { return true;  },\n        peg$c27 = \"false\",\n        peg$c28 = { type: \"literal\", value: \"false\", description: \"\\\"false\\\"\" },\n        peg$c29 = function() { return false; },\n        peg$c30 = \"null\",\n        peg$c31 = { type: \"literal\", value: \"null\", description: \"\\\"null\\\"\" },\n        peg$c32 = function() { return null_; },\n        peg$c33 = function(lit) { return lit.join('').trim() },\n        peg$c34 = { type: \"other\", description: \"double-quote string\" },\n        peg$c35 = \"\\\"\",\n        peg$c36 = { type: \"literal\", value: \"\\\"\", description: \"\\\"\\\\\\\"\\\"\" },\n        peg$c37 = function() { return \"\";    },\n        peg$c38 = function(chars) { return chars; },\n        peg$c39 = { type: \"other\", description: \"single-quote string\" },\n        peg$c40 = \"'\",\n        peg$c41 = { type: \"literal\", value: \"'\", description: \"\\\"'\\\"\" },\n        peg$c42 = function(chars) { return chars.join(\"\"); },\n        peg$c43 = /^[^\"\\\\\\0-\\x1F]/,\n        peg$c44 = { type: \"class\", value: \"[^\\\"\\\\\\\\\\\\0-\\\\x1F]\", description: \"[^\\\"\\\\\\\\\\\\0-\\\\x1F]\" },\n        peg$c45 = \"\\\\\\\"\",\n        peg$c46 = { type: \"literal\", value: \"\\\\\\\"\", description: \"\\\"\\\\\\\\\\\\\\\"\\\"\" },\n        peg$c47 = function() { return '\"';  },\n        peg$c48 = \"\\\\\\\\\",\n        peg$c49 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\n        peg$c50 = function() { return \"\\\\\"; },\n        peg$c51 = \"\\\\/\",\n        peg$c52 = { type: \"literal\", value: \"\\\\/\", description: \"\\\"\\\\\\\\/\\\"\" },\n        peg$c53 = function() { return \"/\";  },\n        peg$c54 = \"\\\\b\",\n        peg$c55 = { type: \"literal\", value: \"\\\\b\", description: \"\\\"\\\\\\\\b\\\"\" },\n        peg$c56 = function() { return \"\\b\"; },\n        peg$c57 = \"\\\\f\",\n        peg$c58 = { type: \"literal\", value: \"\\\\f\", description: \"\\\"\\\\\\\\f\\\"\" },\n        peg$c59 = function() { return \"\\f\"; },\n        peg$c60 = \"\\\\n\",\n        peg$c61 = { type: \"literal\", value: \"\\\\n\", description: \"\\\"\\\\\\\\n\\\"\" },\n        peg$c62 = function() { return \"\\n\"; },\n        peg$c63 = \"\\\\r\",\n        peg$c64 = { type: \"literal\", value: \"\\\\r\", description: \"\\\"\\\\\\\\r\\\"\" },\n        peg$c65 = function() { return \"\\r\"; },\n        peg$c66 = \"\\\\t\",\n        peg$c67 = { type: \"literal\", value: \"\\\\t\", description: \"\\\"\\\\\\\\t\\\"\" },\n        peg$c68 = function() { return \"\\t\"; },\n        peg$c69 = \"\\\\u\",\n        peg$c70 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c71 = function(h1, h2, h3, h4) {\n              return String.fromCharCode(parseInt(\"0x\" + h1 + h2 + h3 + h4)); },\n        peg$c72 = /^[^'\\\\\\0-\\x1F]/,\n        peg$c73 = { type: \"class\", value: \"[^'\\\\\\\\\\\\0-\\\\x1F]\", description: \"[^'\\\\\\\\\\\\0-\\\\x1F]\" },\n        peg$c74 = \"\\\\'\",\n        peg$c75 = { type: \"literal\", value: \"\\\\'\", description: \"\\\"\\\\\\\\'\\\"\" },\n        peg$c76 = function() { return '\\'';  },\n        peg$c77 = { type: \"other\", description: \"key\" },\n        peg$c78 = /^[a-zA-Z0-9_$\\-]/,\n        peg$c79 = { type: \"class\", value: \"[a-zA-Z0-9_$\\\\-]\", description: \"[a-zA-Z0-9_$\\\\-]\" },\n        peg$c80 = function(chars) { return chars.join('') },\n        peg$c81 = /^[^,}\\]]/,\n        peg$c82 = { type: \"class\", value: \"[^,}\\\\]]\", description: \"[^,}\\\\]]\" },\n        peg$c83 = { type: \"other\", description: \"number\" },\n        peg$c84 = function(int_, frac, exp, suffix) { return 0 === suffix.length ? parseFloat(int_ + frac + exp) : (int_  + frac + exp + suffix.join('')).trim(); },\n        peg$c85 = function(int_, frac, suffix) { return 0 === suffix.length ? parseFloat(int_ + frac) : (int_ + frac + suffix.join('')).trim(); },\n        peg$c86 = function(int_, exp, suffix) { return 0 === suffix.length ? parseFloat(int_ + exp) : (int_ + exp + suffix.join('')).trim(); },\n        peg$c87 = function(int_, suffix) { return 0 === suffix.length ? parseFloat(int_) : (int_ + suffix.join('')).trim(); },\n        peg$c88 = function(digit19, digits) { return digit19 + digits;       },\n        peg$c89 = \"-\",\n        peg$c90 = { type: \"literal\", value: \"-\", description: \"\\\"-\\\"\" },\n        peg$c91 = function(digit19, digits) { return \"-\" + digit19 + digits; },\n        peg$c92 = function(digit) { return \"-\" + digit;            },\n        peg$c93 = \".\",\n        peg$c94 = { type: \"literal\", value: \".\", description: \"\\\".\\\"\" },\n        peg$c95 = function(digits) { return \".\" + digits; },\n        peg$c96 = function(e, digits) { return e + digits; },\n        peg$c97 = function(digits) { return digits.join(\"\"); },\n        peg$c98 = /^[eE]/,\n        peg$c99 = { type: \"class\", value: \"[eE]\", description: \"[eE]\" },\n        peg$c100 = /^[+\\-]/,\n        peg$c101 = { type: \"class\", value: \"[+\\\\-]\", description: \"[+\\\\-]\" },\n        peg$c102 = function(e, sign) { return e + (sign?sign:''); },\n        peg$c103 = /^[0-9]/,\n        peg$c104 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c105 = /^[1-9]/,\n        peg$c106 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c107 = /^[0-9a-fA-F]/,\n        peg$c108 = { type: \"class\", value: \"[0-9a-fA-F]\", description: \"[0-9a-fA-F]\" },\n        peg$c109 = { type: \"other\", description: \"whitespace\" },\n        peg$c110 = /^[ \\t\\n\\r]/,\n        peg$c111 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseobject();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c1(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsearray();\n          if (s2 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c2(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseobject() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c3;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c4); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 125) {\n            s3 = peg$c5;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c6); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c7();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n          s1 = peg$c3;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsemembers();\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 125) {\n                s4 = peg$c5;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c6); }\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parse_();\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c8(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsemembers() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s1 = peg$c10;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c9;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepair();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c9;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c10;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsepair();\n              if (s7 !== peg$FAILED) {\n                s5 = [s5, s6, s7];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c10;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c11); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsepair();\n                if (s7 !== peg$FAILED) {\n                  s5 = [s5, s6, s7];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$c0;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s4 = peg$c10;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c11); }\n            }\n            if (s4 === peg$FAILED) {\n              s4 = peg$c9;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c13(s2, s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepair() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parsekey();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 58) {\n            s3 = peg$c14;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c15); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsevalue();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c16(s1, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsearray() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c17;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c18); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 93) {\n            s3 = peg$c19;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c21();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 91) {\n          s1 = peg$c17;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseelements();\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s4 = peg$c19;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c20); }\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parse_();\n                if (s5 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c22(s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseelements() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 44) {\n        s1 = peg$c10;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$c9;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsevalue();\n        if (s2 === peg$FAILED) {\n          s2 = peg$c9;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c10;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsevalue();\n              if (s7 !== peg$FAILED) {\n                s5 = [s5, s6, s7];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$c0;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c10;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c11); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsevalue();\n                if (s7 !== peg$FAILED) {\n                  s5 = [s5, s6, s7];\n                  s4 = s5;\n                } else {\n                  peg$currPos = s4;\n                  s4 = peg$c0;\n                }\n              } else {\n                peg$currPos = s4;\n                s4 = peg$c0;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$c0;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s4 = peg$c10;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c11); }\n            }\n            if (s4 === peg$FAILED) {\n              s4 = peg$c9;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c23(s2, s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsevalue() {\n      var s0, s1, s2;\n\n      s0 = peg$parsestring();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsesingle();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseobject();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsearray();\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 4) === peg$c24) {\n                s1 = peg$c24;\n                peg$currPos += 4;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c25); }\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parse_();\n                if (s2 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c26();\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 5) === peg$c27) {\n                  s1 = peg$c27;\n                  peg$currPos += 5;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c28); }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parse_();\n                  if (s2 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c29();\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.substr(peg$currPos, 4) === peg$c30) {\n                    s1 = peg$c30;\n                    peg$currPos += 4;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c31); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parse_();\n                    if (s2 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c32();\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c0;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c0;\n                  }\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsenumber();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      s1 = peg$parseliteral();\n                      if (s1 !== peg$FAILED) {\n                        peg$reportedPos = s0;\n                        s1 = peg$c33(s1);\n                      }\n                      s0 = s1;\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c35;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s2 = peg$c35;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c36); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c37();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s1 = peg$c35;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c36); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsechars();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 34) {\n              s3 = peg$c35;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c36); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c38(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesingle() {\n      var s0, s1, s2, s3, s4;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c40;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s2 = peg$c40;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c37();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s1 = peg$c40;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseschars();\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s3 = peg$c40;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c41); }\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c38(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c39); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c42(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5;\n\n      if (peg$c43.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c44); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c45) {\n          s1 = peg$c45;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c46); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c47();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c48) {\n            s1 = peg$c48;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c49); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c50();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c51) {\n              s1 = peg$c51;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c53();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c54) {\n                s1 = peg$c54;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c55); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c56();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c57) {\n                  s1 = peg$c57;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c59();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.substr(peg$currPos, 2) === peg$c60) {\n                    s1 = peg$c60;\n                    peg$currPos += 2;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c61); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c62();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.substr(peg$currPos, 2) === peg$c63) {\n                      s1 = peg$c63;\n                      peg$currPos += 2;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c65();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.substr(peg$currPos, 2) === peg$c66) {\n                        s1 = peg$c66;\n                        peg$currPos += 2;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c67); }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        peg$reportedPos = s0;\n                        s1 = peg$c68();\n                      }\n                      s0 = s1;\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n                        if (input.substr(peg$currPos, 2) === peg$c69) {\n                          s1 = peg$c69;\n                          peg$currPos += 2;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c70); }\n                        }\n                        if (s1 !== peg$FAILED) {\n                          s2 = peg$parsehexDigit();\n                          if (s2 !== peg$FAILED) {\n                            s3 = peg$parsehexDigit();\n                            if (s3 !== peg$FAILED) {\n                              s4 = peg$parsehexDigit();\n                              if (s4 !== peg$FAILED) {\n                                s5 = peg$parsehexDigit();\n                                if (s5 !== peg$FAILED) {\n                                  peg$reportedPos = s0;\n                                  s1 = peg$c71(s2, s3, s4, s5);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$c0;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$c0;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseschars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseschar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseschar();\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c42(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseschar() {\n      var s0, s1, s2, s3, s4, s5;\n\n      if (peg$c72.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c73); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c74) {\n          s1 = peg$c74;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c75); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c76();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c48) {\n            s1 = peg$c48;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c49); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c50();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c51) {\n              s1 = peg$c51;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c53();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c54) {\n                s1 = peg$c54;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c55); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c56();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c57) {\n                  s1 = peg$c57;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c58); }\n                }\n                if (s1 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c59();\n                }\n                s0 = s1;\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  if (input.substr(peg$currPos, 2) === peg$c60) {\n                    s1 = peg$c60;\n                    peg$currPos += 2;\n                  } else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c61); }\n                  }\n                  if (s1 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c62();\n                  }\n                  s0 = s1;\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    if (input.substr(peg$currPos, 2) === peg$c63) {\n                      s1 = peg$c63;\n                      peg$currPos += 2;\n                    } else {\n                      s1 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c64); }\n                    }\n                    if (s1 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c65();\n                    }\n                    s0 = s1;\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      if (input.substr(peg$currPos, 2) === peg$c66) {\n                        s1 = peg$c66;\n                        peg$currPos += 2;\n                      } else {\n                        s1 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c67); }\n                      }\n                      if (s1 !== peg$FAILED) {\n                        peg$reportedPos = s0;\n                        s1 = peg$c68();\n                      }\n                      s0 = s1;\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n                        if (input.substr(peg$currPos, 2) === peg$c69) {\n                          s1 = peg$c69;\n                          peg$currPos += 2;\n                        } else {\n                          s1 = peg$FAILED;\n                          if (peg$silentFails === 0) { peg$fail(peg$c70); }\n                        }\n                        if (s1 !== peg$FAILED) {\n                          s2 = peg$parsehexDigit();\n                          if (s2 !== peg$FAILED) {\n                            s3 = peg$parsehexDigit();\n                            if (s3 !== peg$FAILED) {\n                              s4 = peg$parsehexDigit();\n                              if (s4 !== peg$FAILED) {\n                                s5 = peg$parsehexDigit();\n                                if (s5 !== peg$FAILED) {\n                                  peg$reportedPos = s0;\n                                  s1 = peg$c71(s2, s3, s4, s5);\n                                  s0 = s1;\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$c0;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$c0;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$c0;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$c0;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$c0;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsekey() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$parsestring();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsesingle();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = [];\n          if (peg$c78.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c79); }\n          }\n          if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n              s1.push(s2);\n              if (peg$c78.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c79); }\n              }\n            }\n          } else {\n            s1 = peg$c0;\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c80(s1);\n          }\n          s0 = s1;\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c77); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseliteral() {\n      var s0, s1;\n\n      s0 = [];\n      s1 = peg$parselitchar();\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          s1 = peg$parselitchar();\n        }\n      } else {\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parselitchar() {\n      var s0;\n\n      if (peg$c81.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c82); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parseint();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsefrac();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseexp();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parselitchar();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parselitchar();\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c84(s1, s2, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseint();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsefrac();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n            if (s3 !== peg$FAILED) {\n              s4 = [];\n              s5 = peg$parselitchar();\n              while (s5 !== peg$FAILED) {\n                s4.push(s5);\n                s5 = peg$parselitchar();\n              }\n              if (s4 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c85(s1, s2, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseint();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseexp();\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parse_();\n              if (s3 !== peg$FAILED) {\n                s4 = [];\n                s5 = peg$parselitchar();\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = peg$parselitchar();\n                }\n                if (s4 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c86(s1, s2, s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseint();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parselitchar();\n                while (s4 !== peg$FAILED) {\n                  s3.push(s4);\n                  s4 = peg$parselitchar();\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$reportedPos = s0;\n                  s1 = peg$c87(s1, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c0;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          }\n        }\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n\n      return s0;\n    }\n\n    function peg$parseint() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parsedigit19();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsedigits();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c88(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsedigit();\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c89;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c90); }\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsedigit19();\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parsedigits();\n              if (s3 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c91(s2, s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c0;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 45) {\n              s1 = peg$c89;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c90); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parsedigit();\n              if (s2 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c92(s2);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c0;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c0;\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsefrac() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c93;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c94); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsedigits();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c95(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parseexp() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parsee();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsedigits();\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c96(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigits() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsedigit();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsedigit();\n        }\n      } else {\n        s1 = peg$c0;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c97(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsee() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      if (peg$c98.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c99); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (peg$c100.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c101); }\n        }\n        if (s2 === peg$FAILED) {\n          s2 = peg$c9;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c102(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c0;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c0;\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0;\n\n      if (peg$c103.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c104); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit19() {\n      var s0;\n\n      if (peg$c105.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c106); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehexDigit() {\n      var s0;\n\n      if (peg$c107.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c108); }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      s1 = peg$parsewhitespace();\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsewhitespace();\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c109); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsewhitespace() {\n      var s0;\n\n      if (peg$c110.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c111); }\n      }\n\n      return s0;\n    }\n\n\n      /*\n       * We can't return |null| in the |value| rule because that would mean parse\n       * failure. So we return a special object instead and convert it to |null|\n       * later.\n       */\n\n      var null_ = new Object;\n\n      function fixNull(value) {\n        return value === null_ ? null : value;\n      }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();\n\n\n  function stringify( val, opts, depth ) {\n    depth++\n    if( null == val ) return 'null';\n\n    var type = Object.prototype.toString.call(val).charAt(8);\n    if( 'F' === type && !opts.showfunc ) return null;\n\n    // WARNING: output may not be jsonically parsable!\n    if( opts.custom ) {\n      if( val.hasOwnProperty('toString') ) {\n        return val.toString()\n      }\n      else if( val.hasOwnProperty('inspect') ) {\n        return val.inspect()\n      }\n    }\n    \n\n    var out, i = 0, j, k;\n\n    if( 'N' === type ) {\n      return isNaN(val) ? 'null' : val.toString();\n    }\n    else if( 'O' === type ) {\n      out = []\n      if( depth <= opts.depth ) {\n        j = 0\n        for( i in val ) {\n          if( j >= opts.maxitems ) break;\n\n          var pass = true\n          for( k = 0; k < opts.exclude.length && pass; k++ ) {\n            pass = !~i.indexOf(opts.exclude[k])\n          }\n          pass = pass && !opts.omit[i]\n\n          var str = stringify(val[i],opts,depth)\n\n          if( null != str && pass ) {\n            var n = i.match(/^[a-zA-Z0-9_$]+$/) ? i : JSON.stringify(i)\n            out.push( n+':'+str )\n            j++\n          }\n        }\n      }\n      return '{'+out.join(',')+'}'\n    }\n    else if( 'A' === type ) {\n      out = []\n      if( depth <= opts.depth ) {\n        for( ; i < val.length && i < opts.maxitems; i++ ) {\n          var str = stringify(val[i],opts,depth)\n          if( null != str ) {\n            out.push( str )\n          }\n        }\n      }\n      return '['+out.join(',')+']'\n    }\n    else {\n      var valstr = val.toString();\n\n      if( ~\" \\\"'\\r\\n\\t,}]\".indexOf(valstr[0]) || \n          !~valstr.match(/,}]/) ||\n          ~\" \\r\\n\\t\".indexOf(valstr[valstr.length-1]))\n      {\n        valstr = \"'\"+valstr.replace(/'/g,\"\\\\'\")+\"'\"\n      }\n\n      return valstr;\n    }\n  }\n\n\n  jsonic.stringify = function( val, callopts ) {\n    try {\n      var callopts = callopts || {};\n      var opts = {};\n\n      opts.showfunc = callopts.showfunc || callopts.f  || false;\n      opts.custom   = callopts.custom   || callopts.c  || false;\n      opts.depth    = callopts.depth    || callopts.d  || 3;\n      opts.maxitems = callopts.maxitems || callopts.mi || 11;\n      opts.maxchars = callopts.maxchars || callopts.mc || 111;\n      opts.exclude  = callopts.exclude  || callopts.x  || ['$'];\n      var omit = callopts.omit || callopts.o || [];\n\n      opts.omit = {}\n      for( var i = 0; i < omit.length; i++ ) {\n        opts.omit[omit[i]] = true;\n      }\n\n      var str = stringify( val, opts, 0 );\n      str = null == str ? '' : str.substring(0,opts.maxchars);\n      return str;\n    }\n    catch( e ) {\n      return 'ERROR: jsonic.stringify: '+e+' input was: '+JSON.stringify( val )\n    }\n  }\n\n\n  if( typeof exports !== 'undefined' ) {\n    if( typeof module !== 'undefined' && module.exports ) {\n      exports = module.exports = jsonic\n    }\n    exports.jsonic = jsonic\n  } \n  else {\n    root.jsonic = jsonic\n  }\n\n}).call(this);\n\n\n\n\n\n"],"sourceRoot":""}